' <auto-generated />
Imports System
Imports BLOGCQRS.Persistence
Imports Microsoft.EntityFrameworkCore
Imports Microsoft.EntityFrameworkCore.Infrastructure
Imports Microsoft.EntityFrameworkCore.Metadata
Imports Microsoft.EntityFrameworkCore.Migrations

Namespace Global.BLOGCQRS.Persistence.Migrations
    <DbContext(GetType(VBCQRSContext))>
    <Migration("20240119113803_FIRST")>
    Partial Class FIRST
        ''' <inheritdoc />
        Protected Overrides Sub BuildTargetModel(modelBuilder As ModelBuilder)
            modelBuilder.
                HasAnnotation("ProductVersion", "7.0.15").
                HasAnnotation("Relational:MaxIdentifierLength", 128)

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder)

            modelBuilder.Entity("BLOGCQRS.Domain.AccountInfo",
                Sub(b)
                    b.Property(Of Integer)("Id").
                        ValueGeneratedOnAdd().
                        HasColumnType("int").
                        HasColumnName("ACCOUNT_INFO_ID")

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property(Of Integer)("Id"))

                    b.Property(Of Boolean)("IsDelete").
                        ValueGeneratedOnAdd().
                        HasColumnType("bit").
                        HasColumnName("IS_DELETED").
                        HasDefaultValueSql("0")

                    b.Property(Of String)("Password").
                        HasColumnType("nvarchar(max)").
                        HasColumnName("ACCOUNT_INFO_PASSWORD")

                    b.Property(Of String)("Username").
                        HasColumnType("nvarchar(max)").
                        HasColumnName("ACCOUNT_INFO_USERNAME")

                    b.HasKey("Id")

                    b.ToTable("ACCOUNT_INFOS", DirectCast(Nothing, String))
                End Sub)

            modelBuilder.Entity("BLOGCQRS.Domain.Post",
                Sub(b)
                    b.Property(Of Integer)("Id").
                        ValueGeneratedOnAdd().
                        HasColumnType("int").
                        HasColumnName("POST_ID")

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property(Of Integer)("Id"))

                    b.Property(Of String)("Content").
                        HasColumnType("nvarchar(max)").
                        HasColumnName("POST_CONTENT")

                    b.Property(Of String)("CreatedBy").
                        HasColumnType("nvarchar(max)").
                        HasColumnName("CREATED_BY")

                    b.Property(Of Date)("CreatedDate").
                        HasColumnType("datetime2").
                        HasColumnName("CREATED_DATE")

                    b.Property(Of Boolean)("IsDelete").
                        ValueGeneratedOnAdd().
                        HasColumnType("bit").
                        HasColumnName("IS_DELETE").
                        HasDefaultValueSql("0")

                    b.Property(Of String)("ModifiedBy").
                        HasColumnType("nvarchar(max)").
                        HasColumnName("MODEFIED_BY")

                    b.Property(Of Date)("ModifiedDate").
                        HasColumnType("datetime2").
                        HasColumnName("MODEFIED_DATE")

                    b.Property(Of String)("Tittle").
                        HasColumnType("nvarchar(max)").
                        HasColumnName("POST_TITTLE")

                    b.Property(Of Integer)("UserId").
                        HasColumnType("int")

                    b.HasKey("Id")

                    b.HasIndex("UserId")

                    b.ToTable("POSTS", DirectCast(Nothing, String))
                End Sub)

            modelBuilder.Entity("BLOGCQRS.Domain.User",
                Sub(b)
                    b.Property(Of Integer)("Id").
                        ValueGeneratedOnAdd().
                        HasColumnType("int").
                        HasColumnName("USER_ID")

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property(Of Integer)("Id"))

                    b.Property(Of Integer)("Auth").
                        HasColumnType("int")

                    b.Property(Of String)("CreatedBy").
                        HasColumnType("nvarchar(max)").
                        HasColumnName("CREATED_BY")

                    b.Property(Of Date)("CreatedDate").
                        HasColumnType("datetime2").
                        HasColumnName("CREATED_DATE")

                    b.Property(Of Boolean)("IsDelete").
                        ValueGeneratedOnAdd().
                        HasColumnType("bit").
                        HasColumnName("IS_DELETE").
                        HasDefaultValueSql("0")

                    b.Property(Of Integer?)("LoginInfosId").
                        HasColumnType("int")

                    b.Property(Of String)("ModifiedBy").
                        HasColumnType("nvarchar(max)").
                        HasColumnName("MODEFIED_BY")

                    b.Property(Of Date)("ModifiedDate").
                        HasColumnType("datetime2").
                        HasColumnName("MODEFIED_DATE")

                    b.Property(Of String)("Name").
                        HasColumnType("nvarchar(max)").
                        HasColumnName("USER_NAME")

                    b.HasKey("Id")

                    b.HasIndex("LoginInfosId")

                    b.ToTable("USERS", DirectCast(Nothing, String))
                End Sub)

            modelBuilder.Entity("BLOGCQRS.Domain.Post",
                Sub(b)
                    b.HasOne("BLOGCQRS.Domain.User", "Author").
                        WithMany("Posts").
                        HasForeignKey("UserId").
                        OnDelete(DeleteBehavior.Cascade).
                        IsRequired()
                    b.Navigation("Author")
                End Sub)

            modelBuilder.Entity("BLOGCQRS.Domain.User",
                Sub(b)
                    b.HasOne("BLOGCQRS.Domain.AccountInfo", "LoginInfos").
                        WithMany().
                        HasForeignKey("LoginInfosId")
                    b.Navigation("LoginInfos")
                End Sub)

            modelBuilder.Entity("BLOGCQRS.Domain.User",
                Sub(b)
                    b.Navigation("Posts")
                End Sub)
        End Sub
    End Class
End Namespace
